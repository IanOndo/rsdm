# Generated by roxygen2: do not edit by hand

S3method(min,col)
export("%$%")
export("%<>%")
export("%>%")
export("%dopar%")
export(CJ_par_dt)
export(LL2UTMZone)
export(List2MaxEntCommand)
export(Require)
export(add_inset_map)
export(add_legend)
export(block_cv_maxent)
export(calc_omission_rate)
export(chunk2)
export(cleanOcc)
export(decimalnumcount)
export(getCpuUsageRprocs)
export(getFreeMemory)
export(getNumRprocess)
export(get_best_maxent_model)
export(get_gbiftaxonkey)
export(get_maxent_command_line)
export(get_maxent_output)
export(grid_pixels)
export(group_by_occ)
export(init_main_directories)
export(init_model_directory)
export(is.keyval.exists)
export(kmeansEqual)
export(loocv_geo)
export(make_bbox_domain)
export(make_ecoregion_domain)
export(make_geographic_block)
export(make_geographic_domain)
export(make_projection_domain)
export(map_lfd)
export(map_raster)
export(maskCover)
export(maxent)
export(maxent_post_process)
export(mclapply.hack)
export(meters2degrees)
export(modal)
export(pamEqual)
export(pointsTogrid)
export(project_geoModel)
export(project_maxent)
export(psi.estim)
export(psi.estim.logistic)
export(queryBIEN)
export(queryGBIF)
export(queryOcc)
export(read_layers)
export(removeTMPFiles)
export(run_SDMWorkflow)
export(run_geoModel)
export(run_maxentModel)
export(run_pointModel)
export(search.c)
export(search.tau)
export(set_command_arg)
export(set_command_param)
export(st_par_covered_by)
export(st_par_intersection)
export(st_par_intersects)
export(st_par_overlaps)
export(st_par_within)
export(st_rectangle)
export(st_remove_holes)
export(strip_extension)
export(train_Maxent)
export(train_geoModel)
export(unregister)
exportMethods(exdet)
exportMethods(micdet)
importFrom(Rcpp,sourceCpp)
importFrom(data.table,":=")
importFrom(data.table,.BY)
importFrom(data.table,.EACHI)
importFrom(data.table,.GRP)
importFrom(data.table,.I)
importFrom(data.table,.N)
importFrom(data.table,.NGRP)
importFrom(data.table,.SD)
importFrom(data.table,data.table)
importFrom(foreach,"%dopar%")
importFrom(magrittr,"%$%")
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
useDynLib(rsdm, .registration = TRUE)
